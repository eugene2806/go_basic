package main // Это пакет main в нем определена функция main
import (
	"fmt"
	"modul1/rectangle"
)

// 0. Разделяющая область видимости уровня одного пакета
// 1. В этом примере 2 модуля помещены в одну директорию
// 2. Говорят что модули main и calculator находятся в одном пакете (в одной дирректории)

// 3. Разделяющая область видимости
// Все что находится внутри данного пакета - доступно из любого модуля без импортирования

func main() {
	// Данные функции видны компилятору за счет того что calculator входит в пакет main
	//resAdd := Add(20, 10)
	//resSub := Sub(20, 10)
	//resMult := Mult(20, 10)
	//resDiv := Div(20, 10)
	//
	//fmt.Println(resAdd, resSub, resMult, resDiv)
	// Для того чтобы запустить все файлы нужно выполнить
	//*go run main.go calculator.go

	//4. Если имя сущности(Переменная, функция, структура, метод, интерфейс и т.д)
	// Начинается с большой буквы то данную сущность можно экспортировать (она передаваема в другие модули и пакеты)
	// Если с маленькой буквы то нельза передавать за пределы данного Пакета!!!

	//5. Чтобы связать модули между собой необходимо проставить Альтернативные пути
	// Альтернативный путь определяет точку входа во все приложение
	// Для того чтобы его создать необходимо создать файл GO.MOD
	// Данный файл будет отправной точкой для импортирования всех ПАКЕТОВ ВНУТРИ ПРОЕКТА
	// go mod init <ProjectDirName>

	//6. Реализуем внутри rectangle структуру, метод и конструктор
	r := rectangle.New(10, 10, "Green")
	fmt.Println(r)

	//7. Экспортируемость как инкапсуляция
	newR := rectangle.Rectangle{
		A: 10,
		B: 20,
	}
	fmt.Println(newR)

	//8. Если уже создан go.mod
	//go build собирает все в текущую дерикторию
	//go install собирает проект в папку bin

}
